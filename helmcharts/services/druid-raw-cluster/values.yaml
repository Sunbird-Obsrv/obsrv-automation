druid_env: "dev"
druid_cluster_type: "raw"

namespace: &druidns "druid-raw"
global:
  image:
    registry: ""

registry: "apache"
repository: "druid"
tag: "28.0.1"
digest: ""

druid_monitoring: True
mount_path: /druid/data
storageClass: ""

######################### Druid common variables ########################
druid_directory: "/opt/druid"
druid_extensions_loadList: '"postgresql-metadata-storage", "druid-kafka-indexing-service", "druid-azure-extensions", "druid-s3-extensions", "druid-google-extensions"'

# Logging
# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid.startup.logging.logProperties: true

# Druid Metadata Store
druid_metadata_storage_type: "postgresql"
druid_metadata_storage_connector_connectURI: "jdbc:postgresql://postgresql-hl.postgresql.svc.cluster.local:5432/druid_raw"
druid_metadata_storage_connector_user: "druid_raw"
druid_metadata_storage_connector_password: "druidraw123"

# Druid Storage Type
druid_deepstorage_type: "s3"
druid_storage_directory: "/data"

# AWS S3 Details
s3_access_key: ""
s3_secret_key: ""
s3_bucket: "" # bucket name
druid_storage_baseKey: druid/segments
druid_s3_endpoint_url: ""
druid_s3_endpoint_signingRegion: ""

# Azure Container Details
azure_storage_account_name: ""
azure_storage_account_key: ""
azure_storage_container: ""

# Google Cloud Storage Details
gcs_bucket: ""

# Indexing service logs
# For local disk (only viable in a cluster_type if this is a network mount):
druid_indexer_logs_type: "s3"
druid_indexer_logs_container: ""
druid_indexer_logs_prefix: "backups/druid/druid-task-logs"
druid_indexer_logs_directory: "backups/druid/druid-task-logs"

# Service discovery
druid_selectors_indexing_serviceName: druid/overlord
druid_selectors_coordinator_serviceName: druid/coordinator

# Monitoring
druid_monitoring_monitors: '"com.metamx.metrics.JvmMonitor","org.apache.druid.java.util.metrics.JvmMonitor"'
druid_emitter: composing
druid_emitter_composing_emitters: '"logging"'
druid_emitter_logging_logLevel: INFO

# Storage type of double columns
# ommiting this will lead to index double as float at the storage layer
druid_indexing_doubleStorage: double

#Writing query logs into file
druid_request_logging_type: composing
druid_request_logging_dir: "/data/druid/log"

druid_javascript_enabled: true
druid_sql_enable: true

####################### Druid Broker Variables ##########################

druid_broker_service: druid/broker
druid_broker_port: 8082
druid_broker_min_heap_size: 256M
druid_broker_max_heap_size: 512M
druid_broker_max_direct_size: 192M

# Processing threads and buffers
druid_broker_processing_buffer_sizeBytes: 64MiB
druid_broker_processing_numThreads: 1
druid_broker_processing_numMergeBuffers: 1

druid_broker_pod_memory_request: 256Mi
druid_broker_pod_memory_limit: 750Mi
druid_broker_pod_cpu_request: 250m
druid_broker_pod_cpu_limit: 500m

# HTTP server threads
druid_broker_http_numConnections: 50
druid_broker_http_numThreads: 50

druid_javascript.enabled: true
#druid_sql_enable: true

druid_broker_replicas: 1

##################### Druid Coordinator Variables #######################

druid_coordinator_service: druid/coordinator
druid_coordinator_port: 8081

druid_coordinator_min_heap_size: 256M
druid_coordinator_max_heap_size: 512M

druid_coordinator_pod_memory_request: 256Mi
druid_coordinator_pod_memory_limit: 512Mi
druid_coordinator_pod_cpu_request: 250m
druid_coordinator_pod_cpu_limit: 500m

druid_coordinator_startDelay: PT30S
druid_coordinator_period: PT30S
druid_coordinator_balancer_strategy: diskNormalized

druid_coordinator_replicas: 1

####################### Druid Overlord Variables ########################

druid_overlord_service: druid/overlord
druid_overlord_port: 8090
druid_overlord_min_heap_size: 256M
druid_overlord_max_heap_size: 512M

druid_overlord_pod_memory_request: 256Mi
druid_overlord_pod_memory_limit: 512Mi
druid_overlord_pod_cpu_request: 250m
druid_overlord_pod_cpu_limit: 500m

druid_indexer_queue_startDelay: PT30S

druid_indexer_runner_type: remote
druid_indexer_storage_type: metadata

# Additional parameters for minor compaction
druid_indexer_tasklock_forceTimeChunkLock: false

druid_overlord_replicas: 1

###################### Druid Historical Variables #######################

druid_historical_service: druid/historical
druid_historical_port: 8084
druid_historical_min_heap_size: 768M
druid_historical_max_heap_size: 1024M
druid_historical_max_direct_size: 2560M

druid_historical_pod_memory_request: 3000Mi
druid_historical_pod_memory_limit: 3700Mi
druid_historical_pod_cpu_request: 800m
druid_historical_pod_cpu_limit: 1

# HTTP server threads
druid_historical_http_numThreads: 50

# Processing threads and buffers
druid_historical_processing_buffer_sizeBytes: 512MiB
druid_historical_processing_numThreads: 1
druid_historical_processing_numMergeBuffers: 3

druid_query_ondiskstorage_enabled: True
druid_query_groupBy_maxMergingDictionarySize: 100000000
druid_query_groupBy_maxOnDiskStorage: 524288000

# Segmentstorage (default 100 gb storage)
# 100gb - 107374182400 | 200gb - 214748364800 | 500gb - 536870912000 | 1tb - 1073741824000
druid_segmentCache_locations: '{"path": "/druid/data/store", "maxSize": 536870912000}'
druid_historical_persistent_volume_size: 50G

druid_segmentCache_numLoadingThreads: 4

# Caching
druid_historical_cache_useCache: False
druid_historical_cache_populateCache: true
druid_historical_cache_unCacheable: '"select", "scan"'
druid_cache_type: caffeine
druid_historical_cache_size: 128MiB
druid_historical_cache_expiry: 3600000

druid_historical_replicas: 1

#################### Druid Middlemanager Variables ######################

druid_middlemanager_service: druid/middlemanager
druid_middlemanager_port: 8091
druid_middlemanager_heap_size: 128M

druid_middlemanager_persistent_volume_size: 1G

# Number of tasks per middleManager
druid_worker_capacity: 2
druid_middlemanager_peon_heap_size: 256M

# Task launch parameters
druid_indexer_runner_javaOpts: "-server -Xms512m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
#druid_indexer_task_baseTaskDir: "/var/task"

# Peon properties
#druid_indexer_fork_property_druid_processing_buffer_sizeBytes: 25MiB
#druid_indexer_fork_property_druid_processing_numThreads: 2
#druid_indexer_fork_property_druid_server_http_numThreads: 25

#Additional Parameters
#druid_indexer_task_restoreTasksOnRestart: true

druid_middlemanager_replicas: 1

#################### Druid Indexer Variables ######################

druid_indexer_service: druid/indexer
druid_indexer_port: 8091
# druid_indexer_min_heap_size: 256M
# druid_indexer_max_heap_size: 512M
# druid_indexer_max_direct_size: 256M
druid_indexer_min_heap_size: 7g
druid_indexer_max_heap_size: 9g
druid_indexer_max_direct_size: 2g

# Peon properties
druid_indexer_fork_property_druid_processing_buffer_sizeBytes: 64M
# 512000000 = 512MB (default), 1073741824 = 1GB, 5368709120 = 5GB, 8589934592 = 8GB
druid_indexer_worker_globalIngestionHeapLimitBytes: "8589934592"
druid_indexer_fork_property_druid_processing_numThreads: 2 # Number of cores - 1 (or 1)
druid_indexer_fork_property_druid_processing_numMergeBuffers: 1
druid_indexer_fork_property_druid_server_http_numThreads: 25 # max(10, (Number of cores * 17) / 16 + 2) + 30

# druid_indexer_pod_memory_request: 512Mi
# druid_indexer_pod_memory_limit: 768Mi
druid_indexer_pod_memory_request: 10Gi
druid_indexer_pod_memory_limit: 11Gi
druid_indexer_pod_cpu_request: 1
druid_indexer_pod_cpu_limit: 1
druid_indexer_numConcurrentMerges: 1

druid_indexer_persistent_volume_size: 20Gi

indexer_intial_delay: 30

# Number of tasks per indexer
druid_indexer_worker_capacity: 30 #(Number of available processors - 1)

# Task launch parameters
# druid_indexer_runner_javaOpts: "-server -Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -XX:MaxDirectMemorySize=512m"
druid_indexer_task_baseTaskDir: "/druid/data/task"

#Additional Parameters
druid_indexer_task_restoreTasksOnRestart: true

druid_indexer_replicas: 1

######################## Druid Router Variables #########################

druid_router_service: druid/router
druid_router_plaintextPort: 8888
druid_router_service_type: ClusterIP

druid_router_min_heap_size: 256M
druid_router_max_heap_size: 512M

druid_router_pod_memory_request: 256Mi
druid_router_pod_memory_limit: 512Mi
druid_router_pod_cpu_request: 250m
druid_router_pod_cpu_limit: 512m

# HTTP proxy
druid_router_http_numConnections: 25
druid_router_http_readTimeout: PT5M
druid_router_http_numMaxThreads: 25
druid_server_http_numThreads: 25

# Service discovery
druid_router_defaultBrokerServiceName: druid/broker
druid_router_coordinatorServiceName: druid/coordinator

# Management proxy to coordinator / overlord: required for unified web console.
druid_router_managementProxy_enabled: True

druid_router_replicas: 1

#################### Zookeeper Variables ######################

zookeeper:
  namespace: *druidns
  image:
    registry: docker.io
    repository: bitnami/zookeeper
    tag: 3.6-debian-10
    pullPolicy: IfNotPresent

  persistence:
    size: 1Gi

  heapSize: 128
  replicaCount: 1
  serviceAccount:
    create: true
    name: druid-zk-sa

  resources:
    requests:
      memory: 128Mi
      cpu: 256m
    limits:
      memory: 256Mi
      cpu: 512m

  tickTime: 2000
  initLimit: 10
  syncLimit: 5
  preAllocSize: 65536
  snapCount: 100000
  maxClientCnxns: 60
  fourlwCommandsWhitelist: srvr, mntr, ruok
  listenOnAllIPs: false
  allowAnonymousLogin: true
  autopurge:
    snapRetainCount: 3
    purgeInterval: 0
  maxSessionTimeout: 40000

  #  allowAnonymousLogin: true

  minServerId: 1

  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
    probeCommandTimeout: 2

  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
    probeCommandTimeout: 2

  service:
    type: ClusterIP
    port: 2181
    followerPort: 2888
    electionPort: 3888
    nodePorts:
      client: ""
      clientTls: ""
    publishNotReadyAddresses: true
    tlsClientPort: 3181
    disableBaseClientPort: false
    annotations: {}
    headless:
      annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations:
    serviceAccountName: ""
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: druid-raw-sa
