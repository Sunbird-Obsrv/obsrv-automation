loki:
  auth_enabled: ${loki_auth_enabled}
  podLabels:
    system.monitoring: 'true'
  commonConfig:
    replication_factor: 1
  limits_config:
    enforce_metric_name: ${limits_config_enforce_metric_name}
    reject_old_samples: ${limits_config_reject_old_samples}
    reject_old_samples_max_age: "${limits_config_reject_old_samples_max_age}"
    max_cache_freshness_per_query: "${limits_config_max_cache_freshness_per_query}"
    split_queries_by_interval: "${limits_config_split_queries_by_interval}"
    retention_period: "${limits_config_retention_period}"
compactor:
  retention_enabled: ${compactor_retention_enabled}
  working_directory: ${compactor_working_directory}
test:
  enabled: false
minio:
  enabled: ${minio_enabled}
  resources:
    limits:
      cpu: 0.1
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 128Mi
  metrics:
    serviceMonitor:
      enabled: ${minio_service_monitor_enabled}
      includeNode: ${minio_include_node_metrics}
      additionalLabels:
        release: monitoring
        system.monitoring: 'true'
monitoring:
  dashboards:
    namespace: "${loki_dashboards_namespace}"
  selfMonitoring:
    enabled: false
  lokiCanary:
    enabled: false
    resources:
    limits:
      cpu: 0.1
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 128Mi
  serviceMonitor:
    labels:
      release: monitoring
      system.monitoring: 'true'
gateway:
  resources:
    limits:
      cpu: 0.1
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 128Mi
read:
  affinity: {}
  podLabels:
    system.monitoring: 'true'
  replicas: 1
  resources:
    limits:
      cpu: 0.1
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 128Mi
write:
  affinity: {}
  podLabels:
    system.monitoring: 'true'
  replicas: 1
  resources:
    limits:
      cpu: 0.1
      memory: 256Mi
    requests:
      cpu: 0.1
      memory: 128Mi
