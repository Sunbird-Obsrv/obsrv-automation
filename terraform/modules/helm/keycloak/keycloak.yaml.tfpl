service:
  type: ${service_type}

extraEnvVars:
  - name: KEYCLOAK_HOSTNAME
    value: "${kong_proxy_keycloak}"
  - name: KEYCLOAK_PROXY
    value: edge

externalDatabase:
  host: ${postgresql_service_name}.svc.cluster.local
keycloakConfigCli:
  configuration:
    obsrv-realm.json: |
      {
        "id": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
        "realm": "master",
        "displayName": "Keycloak",
        "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 60,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "94952eb5-e005-47d4-a9ba-7efcf67ce18d",
              "name": "offline_access",
              "description": "$${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
              "attributes": {}
            },
            {
              "id": "2483a517-bf3e-4e78-adf4-24ee73154ace",
              "name": "create-realm",
              "description": "$${role_create-realm}",
              "composite": false,
              "clientRole": false,
              "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
              "attributes": {}
            },
            {
              "id": "1edc455a-a98d-4ceb-b41c-65d2aeee8fa5",
              "name": "uma_authorization",
              "description": "$${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
              "attributes": {}
            },
            {
              "id": "f68aaee4-bb28-4ca6-b10d-af4fcfdc149b",
              "name": "default-roles-master",
              "description": "$${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "view-profile",
                    "manage-account"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
              "attributes": {}
            },
            {
              "id": "d87d6929-a540-46b9-b005-307d8bd1f3d3",
              "name": "admin",
              "description": "$${role_admin}",
              "composite": true,
              "composites": {
                "realm": [
                  "create-realm"
                ],
                "client": {
                  "master-realm": [
                    "manage-users",
                    "query-users",
                    "query-clients",
                    "impersonation",
                    "manage-clients",
                    "query-groups",
                    "view-users",
                    "view-events",
                    "view-identity-providers",
                    "manage-events",
                    "manage-identity-providers",
                    "manage-realm",
                    "query-realms",
                    "view-clients",
                    "view-authorization",
                    "manage-authorization",
                    "create-client",
                    "view-realm"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f",
              "attributes": {}
            }
          ],
          "client": {
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "4c8248e9-8e53-4497-9867-603dc34d9612",
                "name": "read-token",
                "description": "$${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "e31c0480-5389-4f88-b61b-d1235652ce92",
                "attributes": {}
              }
            ],
            "master-realm": [
              {
                "id": "908ce7f0-6661-4125-a6c2-7626d986cd13",
                "name": "manage-users",
                "description": "$${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "c72bcb26-7fd5-413f-a0f3-f4a7f1a7e5fc",
                "name": "query-users",
                "description": "$${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "f9d20dd8-525e-4a95-8c0a-2a5c9193a5bd",
                "name": "query-clients",
                "description": "$${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "39c29c84-e9d7-4d1d-833b-42fd1e4633d3",
                "name": "impersonation",
                "description": "$${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "940d347f-fcc7-4a06-8cf5-e589006e2844",
                "name": "manage-clients",
                "description": "$${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "3e5bac06-c298-4602-b6ea-9e02b7a1bda2",
                "name": "query-groups",
                "description": "$${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "443c022e-3954-495d-b7a9-2affb4bcb33e",
                "name": "view-events",
                "description": "$${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "4c1751d2-c4e4-447d-9e2a-e968acd8e5aa",
                "name": "view-users",
                "description": "$${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-groups",
                      "query-users"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "6c3aef9e-d696-46a0-ab9d-a2cc458cce98",
                "name": "view-identity-providers",
                "description": "$${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "632418f2-6271-43f5-917c-38b9db344c84",
                "name": "manage-events",
                "description": "$${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "9e6a8eab-085b-4b9e-acd9-e1367cba92a0",
                "name": "manage-identity-providers",
                "description": "$${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "d3913f4d-b264-45fd-b685-558659b52b10",
                "name": "manage-realm",
                "description": "$${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "4268dd66-3ea5-4040-8174-6e0c07fa9fdf",
                "name": "query-realms",
                "description": "$${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "765f445c-ec3f-4dcc-b2a3-334179fc6bc7",
                "name": "manage-authorization",
                "description": "$${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "0ab179b8-4ea9-4326-979d-399cdff73969",
                "name": "view-authorization",
                "description": "$${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "470622e1-9546-4efe-952a-1bf362c5a9c0",
                "name": "view-clients",
                "description": "$${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "c010218d-45ba-41f1-ae98-abb5cd0a955b",
                "name": "create-client",
                "description": "$${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              },
              {
                "id": "77a1224f-3710-4aa5-9ec2-790a63b5e467",
                "name": "view-realm",
                "description": "$${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
                "attributes": {}
              }
            ],
            "account": [
              {
                "id": "94194975-7bae-4c54-b6c5-f37759de089e",
                "name": "delete-account",
                "description": "$${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "597e20bf-49fe-48d9-a7cb-a411d2f85893",
                "name": "manage-consent",
                "description": "$${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "59c3e0ed-fd35-4bb9-b430-e3bdc12e02f5",
                "name": "manage-account-links",
                "description": "$${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "755efc98-443e-4567-b50a-ee0cc2cb2742",
                "name": "view-consent",
                "description": "$${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "8fe8ab4e-53f8-494d-8338-f6ad41203234",
                "name": "view-groups",
                "description": "$${role_view-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "61d6304f-7a88-4edf-b743-73e986d8a69a",
                "name": "view-profile",
                "description": "$${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "0f4290b9-5c75-44bf-a454-74d8ad8bb63a",
                "name": "manage-account",
                "description": "$${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              },
              {
                "id": "a877ca45-d436-4271-9b19-6fe9d04403b6",
                "name": "view-applications",
                "description": "$${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "0aca13fc-aad3-4513-bb83-b783e96da752",
                "attributes": {}
              }
            ],
            "obsrv": [
              {
                "id": "24bc1bd7-0836-4bac-a255-f2513a2155b8",
                "name": "uma_protection",
                "composite": false,
                "clientRole": true,
                "containerId": "ac53de48-0132-4e22-8d39-4d4040aff7a3",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "f68aaee4-bb28-4ca6-b10d-af4fcfdc149b",
          "name": "default-roles-master",
          "description": "$${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "0d88e90f-7e32-437a-8765-a700b5bbc02f"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpPolicyCodeReusable": false,
        "otpSupportedApplications": [
          "totpAppFreeOTPName",
          "totpAppGoogleName",
          "totpAppMicrosoftAuthenticatorName"
        ],
        "localizationTexts": {},
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyExtraOrigins": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessExtraOrigins": [],
        "users": [
          {
            "id": "73a75bbd-3e22-46e6-bc41-e499d5b673c8",
            "createdTimestamp": 1708480240650,
            "username": "service-account-obsrv",
            "enabled": true,
            "totp": false,
            "emailVerified": false,
            "serviceAccountClientId": "obsrv",
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master"
            ],
            "clientRoles": {
              "obsrv": [
                "uma_protection"
              ]
            },
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account",
                "view-groups"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "0aca13fc-aad3-4513-bb83-b783e96da752",
            "clientId": "account",
            "name": "$${client_account}",
            "rootUrl": "$${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "fb8330fe-5505-4d95-9460-cfd358365666",
            "clientId": "account-console",
            "name": "$${client_account-console}",
            "rootUrl": "$${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "6592f4cd-4904-490d-9630-6bc2e5137884",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "3d968cfe-1240-4c56-b006-27dba55a1d65",
            "clientId": "admin-cli",
            "name": "$${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "e31c0480-5389-4f88-b61b-d1235652ce92",
            "clientId": "broker",
            "name": "$${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "2e5a18d8-db00-42a3-a355-ef42d3a9cdec",
            "clientId": "master-realm",
            "name": "master Realm",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "ac53de48-0132-4e22-8d39-4d4040aff7a3",
            "clientId": "obsrv",
            "name": "",
            "description": "",
            "rootUrl": "${kong_ingress_domain}",
            "adminUrl": "${kong_ingress_domain}",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "Fh6B7FAHwD4GBcigP3g3yu8iDBQlPYuG",
            "redirectUris": [
              "${kong_ingress_domain}/oauth-authorized/keycloak"
            ],
            "webOrigins": [
              "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
              "oidc.ciba.grant.enabled": "false",
              "client.secret.creation.time": "1708480240",
              "backchannel.logout.session.required": "true",
              "post.logout.redirect.uris": "/logout",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "id": "04451fc3-ab2e-4897-a8ee-043e86140e26",
                "name": "Client Host",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientHost",
                  "introspection.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientHost",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f2082068-8497-478e-9640-6b967772aeea",
                "name": "Client IP Address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "clientAddress",
                  "introspection.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "clientAddress",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "4e624335-5bc9-451f-ba0b-3e140c97bd8c",
                "name": "Client ID",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usersessionmodel-note-mapper",
                "consentRequired": false,
                "config": {
                  "user.session.note": "client_id",
                  "introspection.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "client_id",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ],
            "authorizationSettings": {
              "allowRemoteResourceManagement": true,
              "policyEnforcementMode": "ENFORCING",
              "resources": [
                {
                  "name": "Default Resource",
                  "type": "urn:obsrv:resources:default",
                  "ownerManagedAccess": false,
                  "attributes": {},
                  "_id": "c800d3c7-fc09-4609-b205-041a5a7e13b8",
                  "uris": [
                    "/*"
                  ]
                }
              ],
              "policies": [
                {
                  "id": "7993caa8-2415-46cf-a594-fdf831d97372",
                  "name": "Default Policy",
                  "description": "A policy that grants access only for users within this realm",
                  "type": "js",
                  "logic": "POSITIVE",
                  "decisionStrategy": "AFFIRMATIVE",
                  "config": {
                    "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                  }
                },
                {
                  "id": "80db91df-ddeb-465b-8c93-4ae6d7d1e98c",
                  "name": "Default Permission",
                  "description": "A permission that applies to the default resource type",
                  "type": "resource",
                  "logic": "POSITIVE",
                  "decisionStrategy": "UNANIMOUS",
                  "config": {
                    "defaultResourceType": "urn:obsrv:resources:default",
                    "applyPolicies": "[\"Default Policy\"]"
                  }
                }
              ],
              "scopes": [],
              "decisionStrategy": "UNANIMOUS"
            }
          },
          {
            "id": "43838c79-ddbc-4b69-96a6-7745b6c5d877",
            "clientId": "security-admin-console",
            "name": "$${client_security-admin-console}",
            "rootUrl": "$${authAdminUrl}",
            "baseUrl": "/admin/master/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/master/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "post.logout.redirect.uris": "+",
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "0678d72c-0be4-47ec-aeac-fbaadd2abcfe",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "acr",
              "profile",
              "roles",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "a80600f8-a1e0-479d-9b8a-25ed15896535",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "$${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "2081719a-6d5d-4189-a8f9-66c1f282fb50",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f177bc06-12e0-4395-9145-fc742e4b041a",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e9486187-455a-4ff9-9a5a-6207e29bd7cc",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e2e307ad-1899-4ba7-b9fa-83cd09cefb25",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "83752cb5-667d-4405-bcf0-1ccee5ea33e7",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f51ac5f3-a939-4955-80d7-1655463c84e3",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "aba1975a-c926-4edc-86a2-6ea991e80713",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ed4d5901-dc0a-492a-88d7-b806342ad069",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "long"
                }
              },
              {
                "id": "3f781d10-4c0b-4e47-b25d-01a45630a6d9",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "9cf0ff29-f97a-45c8-aa72-678e1641b2ec",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "212a227a-936e-40a2-8555-813e6b94de36",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6077ccd7-565f-4083-9234-1b8e62bd278d",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "a1011532-a89a-48d2-a4ec-7352c3290164",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "57e1a76f-0f22-405e-88c0-6ec0b94f0344",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "a10502cc-c4e0-43f4-9a86-f44b51a9e94a",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "a545a126-b1ae-4ddb-bab3-002bb3067491",
                "name": "acr loa level",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-acr-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "introspection.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "704a9375-24bc-4b92-9239-31befb575dc9",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "82e5e8e9-3ca5-498b-926e-d68d9d79f80d",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {
                  "access.token.claim": "true",
                  "introspection.token.claim": "true"
                }
              }
            ]
          },
          {
            "id": "b4c2f4a9-51fe-4c27-8bf7-7b571cf3f5a4",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "$${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "6d322025-5945-4a42-81e1-534d2e827610",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "introspection.token.claim": "true",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "a1a6b80e-3f19-4e25-8d48-71428f15f4db",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "d416290a-b8ca-4149-ab63-1b5b96e7d979",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "425bba91-4c7c-47ac-88f1-5fda3092aaaa",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "6ff483ce-fc2d-46c9-8d60-88115cf91eb5",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "$${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "68905463-0d7c-4217-8a52-b0ae89083094",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "89b19892-0675-4183-b0e5-67ffb142b7e7",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "dd9eca61-2e27-4c78-985e-dae80ac26043",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "$${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "2994a210-2b6f-43a6-8c40-fbbf4c9b7c10",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "$${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "e222ead1-8691-4c96-86ea-7eca408597e3",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {
                  "access.token.claim": "true",
                  "introspection.token.claim": "true"
                }
              },
              {
                "id": "bfea20f3-9ee8-4301-a714-244135e2dbfe",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "55c9349f-dd94-4e5f-b90c-9f77fbd1965c",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "multivalued": "true",
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.$${client_id}.roles",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "04c41cad-1cfa-40d2-a46a-a8fe5551e5ad",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "$${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "04deb5e1-410b-4f39-848e-0fa36a0c403d",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "e6ce3a1d-9b69-42ad-839b-a5403af8e725",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "$${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "87e148f4-87d9-4508-a672-b73afd384120",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "13cfefd5-3ab3-44e6-b49d-9cd08c351ac5",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins",
          "acr"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "referrerPolicy": "no-referrer",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "xXSSProtection": "1; mode=block",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "301fc6b5-75c8-40e2-8aab-266658e493bd",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            },
            {
              "id": "a7a818bf-f439-4ae9-85af-9dde023de1d6",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "73edeb8f-9c94-4392-8d45-9bb2c069be44",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "e2ec76b1-f508-4102-a151-fafc77afe090",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-user-attribute-mapper",
                  "saml-user-property-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-address-mapper",
                  "oidc-full-name-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-role-list-mapper"
                ]
              }
            },
            {
              "id": "e5a5db20-4b7e-4dfc-8594-a357ac96c3cf",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "79f34e23-5201-4a3d-87bb-a982020f5a38",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "ebc0299b-eb7d-4383-bebe-6663da91e2fd",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-role-list-mapper",
                  "oidc-full-name-mapper",
                  "oidc-address-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-property-mapper",
                  "oidc-usermodel-property-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-usermodel-attribute-mapper"
                ]
              }
            },
            {
              "id": "a7a4e52f-b980-4090-a533-c074a2862ae4",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "287b2c5e-bdf0-47a0-9342-3e6736672c4c",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "35c19e15-0602-486c-be02-87ad8bee002a",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "d03eb2ab-5409-4dc1-95d8-f590484ceaec",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "246dc179-0030-4df4-8b2c-a4ed040c35a5",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "0f3b94aa-d022-4844-a236-c0ca3c1d7d17",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "fa1e3e78-aa30-42c1-a991-abedd82e115f",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "dbd4c298-3490-4031-8f1d-a4f3da34c60e",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "27e85e56-3c19-44b0-afee-d12ffb511b0f",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "864599ce-004e-48a4-b0e4-b03a503df038",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "01a09719-7dee-4b2c-ac66-6fcafbf1620d",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "431b6a11-cfea-4044-a0af-14908265e1af",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "e3f455d0-152b-437c-9dd6-50e4a2e06e67",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "571ac38f-3f19-4477-8601-b191599a430b",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "forms",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "9734675e-e13c-4dba-ba74-0a62c225f58c",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "454d7f35-4ec3-4dce-a38f-d37e4c5ad1b7",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "autheticatorFlow": true,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "bd03f3b2-f21b-44be-bab1-b5f3554c35f8",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "9c0bc23f-7273-48af-833c-c91fde38b51c",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "b686a420-e1fe-470f-b072-ea297cb2d513",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "autheticatorFlow": true,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "7ea1b0f5-8c13-4697-8613-83d83ca03598",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": true,
                "flowAlias": "registration form",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "bf9bc379-388f-482f-83dc-a302ad6dedc1",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "registration-terms-and-conditions",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 70,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "6875fb88-0c94-4efb-be45-1405d2d1cea9",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "autheticatorFlow": true,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false
              }
            ]
          },
          {
            "id": "ce2a094b-a971-4a28-8961-97e807dd9680",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "autheticatorFlow": false,
                "userSetupAllowed": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "6042b3f1-bbc9-41ef-82c2-0bde1ae17d01",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "e3547a31-c8eb-435a-93f7-c04e7525a87b",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
          },
          {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "parRequestUriLifespan": "60",
          "cibaInterval": "5",
          "realmReusableOtpCode": "false"
        },
        "keycloakVersion": "23.0.6",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }