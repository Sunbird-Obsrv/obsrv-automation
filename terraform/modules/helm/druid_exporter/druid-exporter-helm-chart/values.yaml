---
name: druid-exporter

image:
  name: quay.io/opstree/druid-exporter
  tag: v0.11
  pullPolicy: IfNotPresent

annotations: {}

druidURL: http://druid-raw-sb-dev-routers.druid-raw.svc:8888
logLevel: info
logFormat: json
noHistogram: false

exporterPort: 8080

extraEnv: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

security:
  enabled: false
  druidUser: admin
  druidPassword:
    value: admin
    secretKeyRef:
      enabled: false
      secretName: mysecret
      secretKey: mysecretkey

serviceAccount:
  create: true

serviceType: NodePort

serviceMonitor:
  enabled: true
  namespace: druid-raw
  interval: 30s
  scrapeTimeout: 10s
  # additionalLabels: {}
  # targetLabels: []
  # # ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
  # relabelings: []
  # metricRelabelings: []
    ## Solves conflict with the label 'service' set on the kube-prometehus-stack
    # - sourceLabels:
    #   - exported_service
    #   targetLabel: druid_service
    # - regex: exported_service
    #   action: labeldrop

testEnabled: true