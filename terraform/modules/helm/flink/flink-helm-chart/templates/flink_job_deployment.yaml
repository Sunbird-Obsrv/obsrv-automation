---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-jobmanager
  namespace: {{ .Release.Namespace }}
  labels:
    app: flink
    component: {{ .Release.Name }}-jobmanager
    system.processing: "true"
spec:
  type: ClusterIP
  ports:
    - name: rpc
      port: {{ .Values.jobmanager.rpc_port }}
    - name: blob
      port: {{ .Values.jobmanager.blob_port }}
    - name: query
      port: {{ .Values.jobmanager.query_port }}
    - name: ui
      port: {{ .Values.jobmanager.ui_port }}
    - name: prom
      port: {{ .Values.jobmanager.prom_port }}
  selector:
    app: flink
    component: {{ .Release.Name }}-jobmanager
    system.processing: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-jobmanager-webui
  namespace: {{ .Release.Namespace }}
  {{- if .Values.service.annotations }}
  {{- with .Values.service.annotations }}
annotations:
  {{ toYaml . | indent 4 }}
  {{- end }}
  {{- end }}
spec:
  {{- if eq .Values.service.type "ClusterIP" }}
  type: ClusterIP
  {{- end }}
  {{- if eq .Values.service.type "LoadBalancer" }}
  type: LoadBalancer
  {{- end }}
  ports:
    - name: rest
      port: {{ .Values.rest_port }}
      protocol: TCP
      targetPort: {{ .Values.resttcp_port }}
  selector:
    app: flink
    component: {{ .Release.Name }}-jobmanager
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-taskmanager
  namespace: {{ .Release.Namespace }}
  labels:
    app: flink
    component: {{ .Release.Name }}-taskmanager
    system.processing: "true"
spec:
  type: ClusterIP
  ports:
    - name: prom
      port: {{ .Values.taskmanager.prom_port }}
  selector:
    app: flink
    component: {{ .Release.Name }}-taskmanager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-jobmanager
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: flink
      component: {{ .Release.Name }}-jobmanager
  template:
    metadata:
      labels:
        app: flink
        component: {{ .Release.Name }}-jobmanager
        system.processing: "true"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "{{ .Values.jobmanager.prom_port }}"
    spec:
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ .Release.Name }}-config
          items:
          - key: flink-conf
            path: flink-conf.yaml
          - key: base-config
            path: base-config.conf
          - key: {{ .Release.Name }}
            path: {{ .Release.Name }}.conf
          - key: log4j_console_properties
            path: log4j-console.properties
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      serviceAccount: {{ .Release.Namespace }}-sa
      containers:
      - name: {{ .Release.Name }}-jobmanager
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
              cpu: "{{ .Values.jobmanager.cpu_requests }}"
              memory: "{{ .Values.jobmanager.memory_requests }}"
          limits:
            cpu: "{{ .Values.jobmanager.cpu_limits }}"
            memory: "{{ .Values.jobmanager.memory_limits }}"
        workingDir: /opt/flink
        command: ["/opt/flink/bin/standalone-job.sh"]
        args: ["start-foreground",
{{- if eq .Values.checkpoint_store_type "azure" }}
          "-Dfs.azure.account.key.{{ .Values.azure_account }}.blob.core.windows.net={{ .Values.azure_secret }}",
{{- end }}
# Required only if keys are being used, for service accounts these should be disabled
# {{- if eq .Values.checkpoint_store_type "s3" }}
#           "-Ds3.access-key={{ .Values.s3_access_key }}",
#           "-Ds3.secret-key={{ .Values.s3_secret_key }}",
#           "-Ds3.endpoint={{ .Values.s3_endpoint }}",
#           "-Ds3.path.style.access={{ .Values.s3_path_style_access }}",
# {{- end }}
{{- if eq .Values.checkpoint_store_type "gcs" }}
          "-Dgoogle.cloud.auth.service.account.enable=true",
{{- end }}
{{- $release_name := .Release.Name }}
               "--job-classname={{ (index .Values $release_name).job_classname }}",
               "-Dweb.submit.enable=false",
               "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
               "-Dmetrics.reporter.prom.port={{ .Values.jobmanager.prom_port }}",
               "-Djobmanager.rpc.address={{ .Release.Name }}-jobmanager",
               "-Djobmanager.rpc.port={{ .Values.jobmanager.rpc_port }}",
               "-Dparallelism.default=1",
               "-Dblob.server.port={{ .Values.jobmanager.blob_port }}",
               "-Dqueryable-state.server.ports={{ .Values.jobmanager.query_port }}",
               "--config.file.path",
               "/data/flink/conf/{{ .Release.Name }}.conf"]
        ports:
        - containerPort: {{ .Values.jobmanager.rpc_port }}
          name: rpc
        - containerPort: {{ .Values.jobmanager.blob_port }}
          name: blob
        - containerPort: {{ .Values.jobmanager.query_port }}
          name: query
        - containerPort: {{ .Values.jobmanager.ui_port }}
          name: ui
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf/flink-conf.yaml
          subPath: flink-conf.yaml
        - name: flink-config-volume
          mountPath: /data/flink/conf/baseconfig.conf
          subPath: base-config.conf
        - name: flink-config-volume
          mountPath: /data/flink/conf/{{ .Release.Name }}.conf
          subPath: {{ .Release.Name }}.conf
        - name: flink-config-volume
          mountPath: /opt/flink/conf/log4j-console.properties
          subPath: log4j-console.properties
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-taskmanager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.taskmanager.replicas }}
  selector:
    matchLabels:
      app: flink
      component: {{ .Release.Name }}-taskmanager
  template:
    metadata:
      labels:
        system.processing: "true"
        app: flink
        component: {{ .Release.Name }}-taskmanager
    spec:
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ .Release.Name }}-config
          items:
          - key: flink-conf
            path: flink-conf.yaml
          - key: log4j_console_properties
            path: log4j-console.properties
          - key: base-config
            path: base-config.conf
          - key: {{ .Release.Name }}
            path: {{ .Release.Name }}.conf
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      serviceAccount: {{ .Release.Namespace }}-sa
      containers:
      - name: {{ .Release.Name }}-taskmanager
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
              cpu: "{{ .Values.taskmanager.cpu_requests }}"
              memory: "{{ .Values.taskmanager.memory_requests }}"
          limits:
            cpu: "{{ .Values.taskmanager.cpu_limits }}"
            memory: "{{ .Values.taskmanager.memory_limits }}"
        workingDir: {{ .Values.taskmanager.flink_work_dir }}
        command: ["/opt/flink/bin/taskmanager.sh"]
        args: ["start-foreground",
{{- if eq .Values.checkpoint_store_type "azure" }}
          "-Dfs.azure.account.key.{{ .Values.azure_account }}.blob.core.windows.net={{ .Values.azure_secret }}",
{{- end }}
# Required only if keys are being used, for service accounts these should be disabled
# {{- if eq .Values.checkpoint_store_type "s3" }}
#           "-Ds3.access-key={{ .Values.s3_access_key }}",
#           "-Ds3.secret-key={{ .Values.s3_secret_key }}",
#           "-Ds3.endpoint={{ .Values.s3_endpoint }}",
#           "-Ds3.path.style.access={{ .Values.s3_path_style_access }}",
# {{- end }}
{{- if eq .Values.checkpoint_store_type "gcs" }}
          "-Dgoogle.cloud.auth.service.account.enable=true",
{{- end }}
          "-Dweb.submit.enable=false",
          "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
          "-Dmetrics.reporter.prom.host={{ .Release.Name }}-taskmanager",
          "-Dmetrics.reporter.prom.port=9251-9260",
          "-Djobmanager.rpc.address={{ .Release.Name }}-jobmanager",
          "-Dtaskmanager.rpc.port={{ .Values.taskmanager.rpc_port }}",
          "--config.file.path",
          "/data/flink/conf/{{ .Release.Name }}.conf"]
        ports:
        - containerPort: {{ .Values.taskmanager.rpc_port }}
          name: rpc
        {{- if .Values.healthcheck }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        volumeMounts:
        - name: flink-config-volume
          mountPath: /opt/flink/conf/flink-conf.yaml
          subPath: flink-conf.yaml
        - name: flink-config-volume
          mountPath: /opt/flink/conf/log4j-console.properties
          subPath: log4j-console.properties
        - name: flink-config-volume
          mountPath: /data/flink/conf/baseconfig.conf
          subPath: base-config.conf
        - name: flink-config-volume
          mountPath: /data/flink/conf/{{ .Release.Name }}.conf
          subPath: {{ .Release.Name }}.conf
