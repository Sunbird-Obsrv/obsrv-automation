---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: {{ .Release.Name }}-config
  name: "{{ .Release.Name }}-{{ .Values.secor_env }}"
  namespace: {{ .Values.namespace }}
  labels:
    app: secor
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    system.storage: "true"
spec:
  serviceName: secor
  updateStrategy:
    type: RollingUpdate
  replicas: {{ get (get $.Values.secor_jobs $.Release.Name) "replicas" }}
  selector:
    matchLabels:
      app: secor
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: secor
        release: {{ .Release.Name }}
        system.storage: "true"
    spec:
      serviceAccountName: {{ .Values.namespace }}-sa
      # imagePullSecrets:
      # - name: {{ .Values.imagepullsecrets }}
      initContainers:
      - name: change-pv-dir-ownership
        image: alpine:3
        command: ["/bin/sh", "-c"]
        args: ["chown -R 9999:9999 /mnt/data"]
        volumeMounts:
        - name: data-path
          mountPath: /mnt/data
      containers:
        - name: {{ .Release.Name }}-secor
          image: {{ .Values.image_repository }}:{{ .Values.image_tag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: "CONFIG_FILE"
              value: "/opt/secor/config/secor.partition.properties"
            - name: "LOG4J_CONFIGURATION"
              value: "/opt/secor/config/log4j.docker.properties"
            - name: "JVM_MEMORY"
              value: "{{ .Values.jvm_memory }}"
            - name: "TIMEZONE"
              value: "{{ .Values.timezone }}"  
          volumeMounts:
           - mountPath: /opt/secor/config
             name: secor-config
           - name: "data-path"
             mountPath: /mnt/data
          resources:
            requests:
              cpu: {{ get (get (get $.Values.secor_jobs $.Release.Name) "requests") "cpu" }}
              memory: {{ get (get (get $.Values.secor_jobs $.Release.Name) "requests") "memory"}}
            limits:
              cpu: {{ get (get (get $.Values.secor_jobs $.Release.Name) "limits") "cpu" }}
              memory: {{ get (get (get $.Values.secor_jobs $.Release.Name) "limits") "memory"}}
          securityContext:
            runAsUser: 9999
      volumes:
        - configMap:
            name: {{ .Release.Name }}-config
          name: secor-config
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.describedobject.name }}
        labels:
          app: secor
          system.storage: "true"
      spec:
        storageClassName: "{{- .Values.storageClass }}"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ get (get (get $.Values.secor_jobs $.Release.Name) "storage") "size" }}

