apiVersion: v1
kind: ConfigMap
metadata:
  name: ingestion-spec-config
  namespace: {{ .Values.namespace }}
data:
  system-events.json: |+
    {
      "type": "kafka",
      "spec": {
        "dataSchema": {
          "dataSource": "{{ .Values.datasource.system_events.name }}",
          "dimensionsSpec": {
            "dimensions": [
              {
                "type": "string",
                "name": "event_type"
              },
              {
                "type": "string",
                "name": "ctx_module"
              },
              {
                "type": "string",
                "name": "ctx_pdata_id"
              },
              {
                "type": "string",
                "name": "ctx_pdata_type"
              },
              {
                "type": "string",
                "name": "ctx_pdata_pid"
              },
              {
                "type": "string",
                "name": "error_pdata_id"
              },
              {
                "type": "string",
                "name": "error_pdata_status"
              },
              {
                "type": "string",
                "name": "error_type"
              },
              {
                "type": "string",
                "name": "error_code"
              },
              {
                "type": "string",
                "name": "error_message"
              },
              {
                "type": "string",
                "name": "error_level"
              },
              {
                "type": "string",
                "name": "ctx_dataset"
              },
              {
                "type": "string",
                "name": "ctx_dataset_type"
              },
              {
                "type": "string",
                "name": "extractor_status"
              },
              {
                "type": "string",
                "name": "validator_status"
              },
              {
                "type": "string",
                "name": "dedup_status"
              },
              {
                "type": "string",
                "name": "denorm_status"
              },
              {
                "type": "string",
                "name": "transformer_status"
              }
            ]
          },
          "timestampSpec": {
            "column": "ets",
            "format": "auto"
          },
          "metricsSpec": [
            {
              "type": "count",
              "name": "count"
            },
            {
              "type": "doubleSum",
              "name": "total_processing_time",
              "fieldName": "total_processing_time"
            },
            {
              "type": "doubleSum",
              "name": "latency_time",
              "fieldName": "latency_time"
            },
            {
              "type": "doubleSum",
              "name": "processing_time",
              "fieldName": "processing_time"
            },
            {
              "type": "doubleSum",
              "name": "extractor_job_time",
              "fieldName": "extractor_time"
            },
            {
              "type": "doubleSum",
              "name": "validator_time",
              "fieldName": "validator_time"
            },
            {
              "type": "doubleSum",
              "name": "dedup_time",
              "fieldName": "dedup_time"
            },
            {
              "type": "doubleSum",
              "name": "denorm_time",
              "fieldName": "denorm_time"
            },
            {
              "type": "doubleSum",
              "name": "transformer_time",
              "fieldName": "transformer_time"
            },
            {
              "type": "longSum",
              "name": "error_count",
              "fieldName": "error_count"
            }
          ],
          "granularitySpec": {
            "type": "uniform",
            "segmentGranularity": "{{ .Values.datasource.system_events.segment_granularity }}",
            "queryGranularity": "{{ .Values.datasource.system_events.query_granularity }}",
            "rollup": true
          }
        },
        "tuningConfig": {
          "type": "kafka",
          "maxRowsPerSegment": 5000000,
          "logParseExceptions": true
        },
        "ioConfig": {
          "type": "kafka",
          "topic": "{{ .Values.datasource.system_events.topic }}",
          "consumerProperties": {
            "bootstrap.servers": "{{ .Values.bootstrap_servers }}"
          },
          "taskCount": "{{ .Values.datasource.system_events.task_count }}",
          "replicas": "{{ .Values.datasource.system_events.replicas }}",
          "taskDuration": "{{ .Values.datasource.system_events.task_duration }}",
          "completionTimeout": "{{ .Values.datasource.system_events.task_completion }}",
          "useEarliestOffset": true,
          "inputFormat": {
            "type": "json",
            "flattenSpec": {
              "useFieldDiscovery": false,
              "fields": [
                {
                  "type": "path",
                  "name": "event_type",
                  "expr": "$.etype"
                },
                {
                  "type": "path",
                  "name": "ctx_module",
                  "expr": "$.ctx.module"
                },
                {
                  "type": "path",
                  "name": "ctx_pdata_id",
                  "expr": "$.ctx.pdata.id"
                },
                {
                  "type": "path",
                  "name": "ctx_pdata_type",
                  "expr": "$.ctx.pdata.type"
                },
                {
                  "type": "path",
                  "name": "ctx_pdata_pid",
                  "expr": "$.ctx.pdata.pid"
                },
                {
                  "type": "path",
                  "name": "ctx_dataset",
                  "expr": "$.ctx.dataset"
                },
                {
                  "type": "path",
                  "name": "ctx_dataset_type",
                  "expr": "$.ctx.dataset_type"
                },
                {
                  "type": "path",
                  "name": "ets",
                  "expr": "$.ets"
                },
                {
                  "type": "path",
                  "name": "extractor_status",
                  "expr": "$.data.pipeline_stats.extractor_status"
                },
                {
                  "type": "path",
                  "name": "extractor_time",
                  "expr": "$.data.pipeline_stats.extractor_time"
                },
                {
                  "type": "path",
                  "name": "validator_status",
                  "expr": "$.data.pipeline_stats.validator_status"
                },
                {
                  "type": "path",
                  "name": "validator_time",
                  "expr": "$.data.pipeline_stats.validator_time"
                },
                {
                  "type": "path",
                  "name": "dedup_status",
                  "expr": "$.data.pipeline_stats.dedup_status"
                },
                {
                  "type": "path",
                  "name": "dedup_time",
                  "expr": "$.data.pipeline_stats.dedup_time"
                },
                {
                  "type": "path",
                  "name": "denorm_status",
                  "expr": "$.data.pipeline_stats.denorm_status"
                },
                {
                  "type": "path",
                  "name": "denorm_time",
                  "expr": "$.data.pipeline_stats.denorm_time"
                },
                {
                  "type": "path",
                  "name": "transformer_status",
                  "expr": "$.data.pipeline_stats.transform_status"
                },
                {
                  "type": "path",
                  "name": "transformer_time",
                  "expr": "$.data.pipeline_stats.transform_time"
                },
                {
                  "type": "path",
                  "name": "total_processing_time",
                  "expr": "$.data.pipeline_stats.total_processing_time"
                },
                {
                  "type": "path",
                  "name": "latency_time",
                  "expr": "$.data.pipeline_stats.latency_time"
                },
                {
                  "type": "path",
                  "name": "processing_time",
                  "expr": "$.data.pipeline_stats.processing_time"
                },
                {
                  "type": "path",
                  "name": "error_pdata_id",
                  "expr": "$.data.error.pdata_id"
                },
                {
                  "type": "path",
                  "name": "error_pdata_status",
                  "expr": "$.data.error.pdata_status"
                },
                {
                  "type": "path",
                  "name": "error_type",
                  "expr": "$.data.error.error_type"
                },
                {
                  "type": "path",
                  "name": "error_code",
                  "expr": "$.data.error.error_code"
                },
                {
                  "type": "path",
                  "name": "error_message",
                  "expr": "$.data.error.error_message"
                },
                {
                  "type": "path",
                  "name": "error_level",
                  "expr": "$.data.error.error_level"
                },
                {
                  "type": "path",
                  "name": "error_count",
                  "expr": "$.data.error.error_count"
                }
              ]
            }
          },
          "appendToExisting": false
        }
      }
    }

  system-telemetry-events.json: |+
    {
      "type": "kafka",
      "spec": {
        "dataSchema": {
          "dataSource": "{{ .Values.datasource.system_telemetry_events.name }}",
          "dimensionsSpec": {
            "dimensions": [
              {
                "type": "string",
                "name": "eid"
              },
              {
                "type": "string",
                "name": "ver"
              },
              {
                "type": "string",
                "name": "mid"
              },
              {
                "type": "string",
                "name": "actor_id"
              },
              {
                "type": "string",
                "name": "actor_type"
              },
              {
                "type": "string",
                "name": "context_env"
              },
              {
                "type": "string",
                "name": "context_sid"
              },
              {
                "type": "string",
                "name": "context_pdata_id"
              },
              {
                "type": "string",
                "name": "context_pdata_ver"
              },
              {
                "type": "string",
                "name": "object_id"
              },
              {
                "type": "string",
                "name": "object_type"
              },
              {
                "type": "string",
                "name": "object_rollup_l1"
              },
              {
                "type": "string",
                "name": "object_rollup_l2"
              },
              {
                "type": "string",
                "name": "object_rollup_l3"
              },
              {
                "type": "string",
                "name": "object_rollup_l4"
              },
              {
                "type": "string",
                "name": "edata_action"
              },
              {
                "type": "json",
                "name": "edata_props"
              },
              {
                "type": "string",
                "name": "edata_transition_timeUnit"
              },
              {
                "type": "long",
                "name": "edata_transition_duration"
              },
              {
                "type": "string",
                "name": "edata_transition_toState"
              },
              {
                "type": "string",
                "name": "edata_transition_fromState"
              }
            ]
          },
          "timestampSpec": {
            "column": "ets",
            "format": "auto"
          },
          "metricsSpec": [],
          "granularitySpec": {
            "type": "uniform",
            "segmentGranularity": "{{ .Values.datasource.system_telemetry_events.segment_granularity }}",
            "queryGranularity": "{{ .Values.datasource.system_telemetry_events.query_granularity }}",
            "rollup": false
          }
        },
        "tuningConfig": {
         "type": "kafka",
         "maxRowsPerSegment": 5000000,
          "logParseExceptions": true
        },
        "ioConfig": {
          "type": "kafka",
          "topic": "{{ .Values.datasource.system_telemetry_events.topic }}",
          "consumerProperties": {
            "bootstrap.servers": "{{ .Values.bootstrap_servers }}"
          },
          "taskCount": "{{ .Values.datasource.system_telemetry_events.task_count }}",
          "replicas": "{{ .Values.datasource.system_telemetry_events.replicas }}",
          "taskDuration": "{{ .Values.datasource.system_telemetry_events.task_duration }}",
          "completionTimeout": "{{ .Values.datasource.system_telemetry_events.task_completion }}",
          "inputFormat": {
            "type": "json",
            "flattenSpec": {
              "useFieldDiscovery": true,
              "fields": [
                {
                  "type": "path",
                  "expr": "$.eid",
                  "name": "eid"
                },
                {
                  "type": "path",
                  "expr": "$.ets",
                  "name": "ets"
                },
                {
                  "type": "path",
                  "expr": "$.ver",
                  "name": "ver"
                },
                {
                  "type": "path",
                  "expr": "$.mid",
                  "name": "mid"
                },
                {
                  "type": "path",
                  "expr": "$.actor.id",
                  "name": "actor_id"
                },
                {
                  "type": "path",
                  "expr": "$.actor.type",
                  "name": "actor_type"
                },
                {
                  "type": "path",
                  "expr": "$.context.env",
                  "name": "context_env"
                },
                {
                  "type": "path",
                  "expr": "$.context.sid",
                  "name": "context_sid"
                },
                {
                  "type": "path",
                  "expr": "$.context.pdata.id",
                  "name": "context_pdata_id"
                },
                {
                  "type": "path",
                  "expr": "$.context.pdata.ver",
                  "name": "context_pdata_ver"
                },
                {
                  "type": "path",
                  "expr": "$.object.id",
                  "name": "object_id"
                },
                {
                  "type": "path",
                  "expr": "$.object.type",
                  "name": "object_type"
                },
                {
                  "type": "path",
                  "expr": "$.object.rollup.l1",
                  "name": "object_rollup_l1"
                },
                {
                  "type": "path",
                  "expr": "$.object.rollup.l2",
                  "name": "object_rollup_l2"
                },
                {
                  "type": "path",
                  "expr": "$.object.rollup.l3",
                  "name": "object_rollup_l3"
                },
                {
                  "type": "path",
                  "expr": "$.object.rollup.l4",
                  "name": "object_rollup_l4"
                },
                {
                  "type": "path",
                  "expr": "$.edata.action",
                  "name": "edata_action"
                },
                {
                  "type": "path",
                  "expr": "$.edata.props[*]",
                  "name": "edata_props"
                },
                {
                  "type": "path",
                  "expr": "$.edata.transition.timeUnit",
                  "name": "edata_transition_timeUnit"
                },
                {
                  "type": "path",
                  "expr": "$.edata.transition.duration",
                  "name": "edata_transition_duration"
                },
                {
                  "type": "path",
                  "expr": "$.edata.transition.toState",
                  "name": "edata_transition_toState"
                },
                {
                  "type": "path",
                  "expr": "$.edata.transition.fromState",
                  "name": "edata_transition_fromState"
                }
              ]
            }
          },
          "appendToExisting": false
        }
      }
    }   
